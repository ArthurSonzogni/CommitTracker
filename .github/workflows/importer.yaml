name: importer

on:
  workflow_dispatch: {} # Allows manual trigger.
  schedule:
    - cron:  '0 0 * * 3' # every week on Wednesday.

jobs:
  importer:
    runs-on: ubuntu-latest

    steps:
      - name: Setup node env
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'

      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Pull data
        run: |
          yarn
          yarn install
          yarn pull-data
          cd importer
          yarn
          yarn install

      # ------------------------------------------------------------------------

      - name: Fetch new commits
        run: |
          cd importer
          yarn run fetch_data

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup derived data
        run: |
          yarn run clean-derived-data

      - name: Push data
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/data/
          publish_branch: data
          force_orphan: true

      - name: Generate derived data
        run: |
          yarn run generate-derived-data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ------------------------------------------------------------------------

      - name: Generate treemap data
        run: |
          cd importer
          yarn run treemap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push treemap data
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/treemap/
          publish_branch: treemap
          force_orphan: true

      # ------------------------------------------------------------------------

      - name: Fetch fuzz data
        run: |
          cd importer
          yarn run fuzztest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push fuzz test data
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/fuzz-test/
          publish_branch: fuzz-test
          force_orphan: true

      # ------------------------------------------------------------------------

      - name: Fetch CVE data
        run: |
          cd importer
          yarn run cve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push CVE data
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/cve/
          publish_branch: cve
          force_orphan: true

      # ------------------------------------------------------------------------

      - name: Install OpenMP
        run: sudo apt-get install libomp-dev libomp5

      - name: Build the C++ project
        uses: threeal/cmake-action@v1.3.0
        with:
          source-dir: graph
          build-dir: graph/build
          args: -DCMAKE_BUILD_TYPE:STRING=Release
          run-build: true

      - name: Create Graphs
        run: |
          cd importer
          yarn run graph

      - name: Deploy community map
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/community-map/
          publish_branch: community-map
          force_orphan: true
